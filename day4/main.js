const input1 = '42,32,13,22,91,2,88,85,53,87,37,33,76,98,89,19,69,9,62,21,38,49,54,81,0,26,79,36,57,18,4,40,31,80,24,64,77,97,70,6,73,23,20,47,45,51,74,25,95,96,58,92,94,11,39,63,65,99,48,83,29,34,44,75,55,17,14,56,8,82,59,52,46,90,5,41,60,67,16,1,15,61,71,66,72,30,28,3,43,27,78,10,86,7,50,35,84,12,93,68';
const input2 = '90  8  2 34 41\n11 67 74 71 62\n47 42 44  1 17\n21 55 12 91  6\n60 69 75 92 56\n\n49 29 60 45 31\n94 51 73 33 67\n21 92 53 95 96\n 2 55 52  8 87\n 4 36 76 83 42\n\n23 66 50 84 58\n62 98 81 76 57\n24  2 56 79  6\n55  0 16 64 38\n12 67  5 97 60\n\n46 64  5 39 62\n16 82 13 77 52\n18 26 44  0 61\n25  7 43 42 50\n11 85 30 28 76\n\n51 28 70 65 78\n62 88 30 36 96\n80 87  4  1 24\n63 22 41 79 34\n18 15 47 26 67\n\n48 68 92 67 36\n54 50 71 98 21\n20 91 70 78 76\n87 97 44  3 93\n84 12 39 96 57\n\n86 12 38 44  1\n10 87 74 53 66\n14 99 85 48 88\n59 33 76 71 31\n83 39  2 67 35\n\n62 67 27 96  8\n81 23 78 33 48\n80 16  0 86 85\n26 54 29 32 89\n88 77 43 18 46\n\n87 88 13 49 80\n78 19 81 56 11\n18 55 70 44 48\n31 37 24 95 28\n20 79 89 94 14\n\n10 31 52 49 79\n 8 72 61 27 42\n73  4 11 43 91\n37 44 58 19 97\n96 63 90 13 74\n\n71 27 87 40 99\n69 29 79 64 67\n85 66  4 28 30\n23 51 16 49 45\n92 12 74  1 75\n\n46 52 40 12 44\n 0 73 20 86  1\n85 32  4 42  2\n21 33 56 39  9\n49 69 76 98 22\n\n42 81  5 11  2\n57 50 77  8 24\n85 92 15 39 52\n37 70 36 79 67\n34 20 16 93 22\n\n49 68 25  4 46\n17 57 77 59 54\n65 83 18 84 63\n36 74 61 22 71\n14  0 26  3 98\n\n 1 80 93 66 58\n38  9 18 60  2\n70 46 35 88 11\n95 89 85 29 26\n82 68 25 15 53\n\n97 80 28 17  7\n67 46 54 95 98\n38 74 42 57 79\n63 29 36 78  6\n90 60 84 10 14\n\n18 88  8 96  0\n66 56 43 47 11\n69 73 14 71 25\n27 63 31 44 94\n75 95 84 74 13\n\n92  9 98 17 74\n46  7  2 51 52\n21 60  5 87 15\n86 91 65 69 54\n61 85  1 62 53\n\n89 80  4  0 68\n17 87 52 86 48\n 3 34 16 25 35\n13 38 49 66 50\n36 43 65 84 56\n\n 9 93 54 92 55\n32  2 39 96 98\n58 72 52 83 97\n12 44 27 24 20\n 0  3 28 56 69\n\n66 56 37 36 72\n35 49 40 43 44\n54 21 59 12 65\n74 25 22 80 98\n27 81 69 97 62\n\n72 81 27 61 74\n26 50 79 13 53\n49 78 76 70 43\n51 64 99 46 67\n68 59 71 17 41\n\n97 22 73 30 98\n 8 54 68 47 23\n70 89 41 52 61\n81 28 58 90  3\n88 40 86 46 43\n\n94  6 46 43 59\n41 28 87 31 45\n83 26 66 81  1\n76 86 15 42  8\n67 47 54  4 77\n\n96 56 22 67  2\n95 47 90 54 51\n78 79 29 82 48\n61 81 77  6 24\n71 93 98 26 75\n\n95  7 77 94 64\n19 79 14 24  5\n50 48  4 71 22\n35 69 89 54  2\n 6 51  8 82 58\n\n87  6 85 53 64\n50 43 80 61 15\n69 41 51 76  0\n78 26 37 62 16\n12 33 75 58 52\n\n67 18 68 52 42\n37 30 49 31 69\n93 90 76  9 32\n60 84 73 94 17\n21 27 66 43 44\n\n89 69 24 14  1\n88 33 50  2 63\n12 34  6 97 53\n28 26 55  8 32\n49 19 17 64 86\n\n31 37 81 65 38\n96 18 45 19 58\n35 43  1 49 41\n46 85 92 53 15\n 3 34  8 14 21\n\n35 68 61 45 39\n46 99 52 55 15\n74 14 10 62 17\n 8 66 98 89 91\n58 24 44 27 29\n\n28 48 52 18 13\n17 35 20 11 49\n93 50 31 95 83\n27 33 79 44 80\n 4 96 23 65 68\n\n70 78 31 86 36\n99 38 62 95 27\n52 74 25 80 41\n30 15 47 19 21\n77 23 53  9  7\n\n 0 83 11 25 42\n50 64 76 67 72\n75 30 82 15 84\n58 17 87 61 33\n98 74 44  3 93\n\n 5 40 78 24 11\n57 17 67 60 25\n37 76 28 56 35\n66 94  2 90 47\n86 10 85 46 45\n\n63 12  7 74 14\n21 31 84 51 36\n66 20 25 46 41\n15  3 18 62 45\n35 78 93  2  9\n\n90  9 33 63 41\n25 73 35 97 19\n99 96 45 71 22\n84 43 29 14 88\n42  8  1 78 68\n\n98 84 38 95 27\n18 32 54 12 96\n56 50  2 45 53\n14 83 59 72 70\n22 41 28  9 78\n\n89 94 50 33 73\n31 47  8 35 34\n43 92 95 21 51\n68 13 53 24 38\n80 69 44 87 83\n\n32 82 75 73 91\n99 10 22 58 23\n86  9 42 81 40\n71 25  3 78 54\n80 15 83  5  4\n\n58  1  3 11 24\n66 51 84 44 25\n37 54 12 27 97\n38  2 39 85 83\n89 91 33 79 59\n\n49 22 12 84 60\n34 29 11 92 19\n97 41 88 53 38\n26 37  8 36 67\n91  3 90 52 46\n\n77 35 76 56 20\n39 94 37  3 83\n78 81 66 29  4\n82 41 38  0 73\n59 16 88 15 30\n\n34 69 74 90 33\n 9 47 71 94 10\n76 50 15 19 32\n49 89 31 21 92\n80 12 13 97 93\n\n45 94 35 59 20\n18 46 14 36 30\n 6 78 84 38 99\n 5  4 90 92 63\n34 24 26 75  3\n\n80 39  1 93 55\n67 71 30 44 76\n38 13 73 21  8\n11 47 46 69 29\n15 57 95 52 34\n\n45 86 88 80 19\n 3  5 55 36 90\n54 85 44 18 39\n57 92 42 25 77\n43  0 12  1 24\n\n74 71 83 29 25\n56 12 52 33 64\n68 94 97 14 15\n 7 48 24 80  5\n54 87 35  1 66\n\n55 50 73 72 36\n17 80 87 68 90\n 8 33 81  1 51\n67 61 71 54 95\n93 98 27 56  0\n\n19 32 63  6 98\n13 38 23 28  8\n 5 31 66 72 39\n99 46  2 64 14\n91 83 35 85 10\n\n67 85 49 68 37\n 8 36 31 81 18\n74 61 20 80 50\n34 23 42 52 39\n21 14 22 58 54\n\n16 14 69 13 81\n21 96 62  7  5\n95 52  0 67 24\n 6 30 65 66 86\n28 25 85 56 15\n\n 4 41 21 86 32\n95 23 63 28  2\n 9 16 37 84 14\n92 22 71 42  5\n46 65 69 81 57\n\n45 20 46 44 22\n62 93 78 58 25\n91 38 29 68 24\n21 55 71 43 26\n64 76 84 80 99\n\n92 67 43  5 12\n 2 64 46 15 96\n95 75 73 38 30\n10 65 20 39 26\n36 16 25 27 88\n\n 9 62 18 58 34\n85 80 36  2 48\n16 60 75 72 51\n39 22 32 61 54\n40 44 23 87 53\n\n93 69 56  4 22\n73 51 24 53 19\n83 98 77 94 59\n52 70 15 40 48\n60 89 67 92 85\n\n48 72 42 80 22\n99 49 11 77  4\n28 24  1 63 51\n85 93 62  7 78\n35 32  3 21 86\n\n36 75 67 79 34\n20  8 71  6  5\n50 61 14 52 81\n26 37  0 80 77\n93 47 86 54 94\n\n50 19 68 54 80\n81 12 33 87 24\n28 40 37 30 31\n41 51 15 27 97\n67 70 14 77 86\n\n89 57 48 37 27\n44 46 29 63 20\n74 88 25 68 76\n18 28 91 59 58\n99 77 62 64 83\n\n22  5 86 37 42\n47 69 87 34 89\n64 33 18 56 51\n30 49 11 79 17\n61 80  0 29 57\n\n 7 82 87 15 83\n76 43 92  1 97\n 0 46  2 86  6\n48 27 29 61 67\n53 10 64 93 77\n\n65 16 23 26 87\n58  5 25 97 94\n43  7 39 69 35\n62 81 56 13 28\n76 12 37 14 93\n\n90 81 15 55 23\n58 40  8 56 76\n83  7 78 89 47\n65 70 13 48 42\n16 69 66 52 46\n\n30 38 20 32 94\n91 96 34 23 90\n16 24 49 50 86\n65 19 56  7 66\n80 60 74 71 11\n\n60 77 54 25 22\n 9 61 68  6 89\n15 71 10 84 41\n 1 47  8 43 63\n69 57 85 24 81\n\n54 83 73 52 49\n69 96 31 57 44\n19 66 24  6 55\n91 84 20  3 27\n 7  9 71 43 75\n\n90 72 15 99  2\n73 56 48 28 62\n40 75  0 59 31\n43 67 44 24 77\n98 35  4  3 37\n\n 2 85 72 39 49\n58 25 91 69 19\n34  8 57 42 55\n80 21 51 64 30\n28 32 82 84  6\n\n33 77 39 13 12\n86 21 96 82 94\n78 92 42 45 70\n31 22 60 80 67\n79 27 93 55 65\n\n49 90 73 72 10\n98 89 77 88 12\n83  3 31 47 21\n65 26 93 55 53\n 5 95 22  8 63\n\n79 88 11 62 25\n85 14 77  4 19\n41 31 83 26 67\n46 98 74 99  2\n44 53 70 36 52\n\n21 33 15 57 53\n56 91 25 69 10\n52 59 73 96 87\n65 71 14 37  2\n39 89 29 83 64\n\n88 38 45 39 20\n99 72 61 96  4\n23 24 67 49 80\n77  6 65 76 18\n59 51 78 33 46\n\n44 22  9 90 83\n93 50  2 54 26\n68 71 43 85 41\n38 20  6 64 24\n81 39 33 56 27\n\n98  1 69 30 38\n67 52 79 31  0\n24 41 82 55 73\n33 66 64 20  7\n65  9 14 70 94\n\n59 63 65 25  1\n36 85 61 82 50\n52  3 70 30 43\n79 57 31 71 76\n19 97 93 77 49\n\n60 45 90 32 74\n77 64 58 44 43\n71 49 37 21 46\n50 67  1 24 15\n14 22  0 40 23\n\n65 87 81 64 28\n53 80 23 76 77\n49 14 50  2 35\n85 26 88 94 30\n79 18 68 15 45\n\n 6 48 38 63 92\n51 45 58  4 76\n78 40 22 17 55\n79 12 66 61  5\n68 74  0 93 89\n\n66  4 65 71 77\n47 35 38 83 64\n53 16  9 56 25\n92 81 55 60 33\n80 24 73  0 26\n\n26 29 55 76 38\n79 52 91 84 39\n50 57 37 34 71\n33 31 68 92 24\n81 95  5 70  8\n\n83 64 11 67 42\n97 29 27  4 78\n23 10 48 71 81\n80 74 86 17 36\n61 14 85 21 96\n\n18  8  7 88 25\n59  5 28 57 69\n64 54 16 70 72\n13 75 71 33  2\n60 55 46 51 32\n\n23 89 63 96 88\n71 66  9 53 65\n56 46 29 95 80\n44 94 90  3  5\n11 99 59 60 78\n\n42 33 81 25  0\n46 66 63 82 94\n52 73 92 30 24\n59 26 50 87 45\n79 55 74 17 64\n\n95 43 13 98 18\n62 12 24 88 28\n23 11 93 51 67\n71  0 44 64 96\n66 17 84 90 19\n\n38  6 12 75 27\n28 73 62 50 51\n63 86 29 98 15\n46 90  4 58 96\n20 78 64 56 82\n\n19 91 23 40  1\n78 57 75 43  2\n35 60 85 74 30\n80  3 63 54 32\n82 99 89 25 88\n\n88 13 92 11 72\n56  6 35 55 21\n 8 20 36 60 99\n 1 96 57 45 12\n41 73 50 83 69\n\n42 69 53 76 11\n38 74 13 14 86\n18 49 51 67 61\n26 80 47 16 78\n66 46 12 68 79\n\n22 90 72 93 24\n55 29 43 28  5\n99 47 87 40 51\n81 18 70 20 36\n 0 48 23 46 82\n\n91 74 83 95 54\n60 56 38 37 89\n87 96 71 50 35\n 5 11 42 72  3\n77 81 36 49 97\n\n71 72 17 34 93\n45 81 22 67 23\n61 20 94 14  1\n85 40 15 36 88\n54 91 62 73  9\n\n66 36 39 58 60\n96  8 22 49 77\n76 64 47 78 30\n50 41 12 69 15\n 7  1 29 72 27\n\n90 12 65 13 39\n75 70 47 36 79\n31 54 17 10 32\n76 92 55 83 40\n49  5 20 44 37\n\n16 78 65  5 70\n63 72 89 93 66\n21 90 46 54 81\n 7 48 88 60 11\n95  0 38  3 26\n\n19 65 66 41 27\n 7 18 91 52 48\n87 55 49 68 71\n85 12  4 40  1\n57 67  6 11 58\n\n91 85 38 14 21\n63 93 37 76 25\n68 36  4 24 71\n43 31 60 19 95\n52 55 13 83 78';

const chosenNumbers = input1.split(',');
let bingoBoardsInput = input2.split('\n\n').map(input => input.split(/\n| /g).filter(input => input));

function bingoCheck (bingoBoard) {
    let hitsX = 0;
    let hitsY = 0;
    for (let i=0; i<5; i++) {
        for (let j=0; j<5; j++) {
            hitsX += bingoBoard[i * 5 + j].includes('X') ? 1 : 0;
            hitsY += bingoBoard[j * 5 + i].includes('X') ? 1 : 0;
        }
        if (hitsX === 5 || hitsY === 5) {
            return true;
        } else {
            hitsX = 0;
            hitsY = 0;
        }
    }
    return false;
}

function boardSum (bingoBoard, lastCall) {
    return bingoBoard.filter(input => !input.includes('X')).reduce((pv, cv) => +pv + +cv, 0) * lastCall;
}

const result1 = () => {
    let bingoBoards = bingoBoardsInput;
    let winningBoard;
    for (const number of chosenNumbers) {
        bingoBoards = bingoBoards.map(input => input.map(input => input === number ? input + 'X' : input));
        winningBoard = bingoBoards.filter(input => bingoCheck(input))[0];
        if (winningBoard) {
            return boardSum(winningBoard, number)
        }
    }
}

const result2 = () => {
    let bingoBoards = bingoBoardsInput;
    let notWinningBoards = [];
    let notWinningBoardsBackup = [];
    for (const number of chosenNumbers) {
        notWinningBoardsBackup = notWinningBoards;
        bingoBoards = bingoBoards.map(input => input.map(input => input === number ? input + 'X' : input));
        notWinningBoards = bingoBoards.filter(input => !bingoCheck(input));
        if (notWinningBoards.length === 0) {
            notWinningBoardsBackup = notWinningBoardsBackup.map(input => input.map(input => input === number ? input + 'X' : input));
            return boardSum(notWinningBoardsBackup[0], number);
        }
    }
}
