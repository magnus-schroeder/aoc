const input = '781,721 -> 781,611\n334,551 -> 119,551\n25,153 -> 765,893\n588,619 -> 588,683\n167,63 -> 439,335\n340,129 -> 35,129\n578,712 -> 509,712\n855,426 -> 855,649\n778,71 -> 778,411\n21,314 -> 631,924\n552,148 -> 148,552\n531,889 -> 789,889\n85,963 -> 986,62\n914,140 -> 257,797\n520,721 -> 794,721\n49,936 -> 960,25\n458,941 -> 839,560\n113,797 -> 113,604\n554,136 -> 554,655\n112,208 -> 112,504\n78,410 -> 169,319\n176,148 -> 906,878\n56,98 -> 835,877\n538,981 -> 178,621\n553,102 -> 553,688\n452,761 -> 452,70\n487,574 -> 487,589\n356,406 -> 154,406\n11,646 -> 11,416\n543,19 -> 924,400\n862,773 -> 929,773\n292,901 -> 292,97\n985,236 -> 667,236\n745,572 -> 667,572\n752,794 -> 775,817\n269,649 -> 269,198\n928,327 -> 469,786\n284,937 -> 755,466\n308,876 -> 308,790\n201,94 -> 988,881\n233,958 -> 903,288\n210,879 -> 91,879\n760,48 -> 133,675\n55,79 -> 956,980\n988,15 -> 15,988\n25,974 -> 966,33\n903,671 -> 292,60\n587,770 -> 403,954\n83,379 -> 432,728\n30,121 -> 334,425\n375,516 -> 375,409\n72,370 -> 72,152\n575,595 -> 575,363\n248,64 -> 896,712\n703,421 -> 395,421\n66,978 -> 977,67\n450,961 -> 450,773\n830,895 -> 830,661\n373,58 -> 442,58\n739,383 -> 739,712\n510,188 -> 510,99\n350,880 -> 248,880\n771,278 -> 549,278\n266,434 -> 266,838\n315,490 -> 884,490\n360,651 -> 428,583\n333,452 -> 333,109\n313,414 -> 713,14\n23,982 -> 989,16\n196,201 -> 889,894\n485,761 -> 99,375\n288,918 -> 50,680\n912,206 -> 142,976\n242,10 -> 841,609\n972,11 -> 16,967\n859,142 -> 390,611\n48,348 -> 212,348\n246,514 -> 726,34\n29,754 -> 29,706\n617,296 -> 224,689\n671,487 -> 397,213\n913,898 -> 155,140\n437,688 -> 18,269\n150,150 -> 869,869\n386,873 -> 940,319\n57,326 -> 148,417\n847,12 -> 319,540\n741,640 -> 520,640\n111,458 -> 111,754\n595,615 -> 861,881\n244,722 -> 905,722\n323,394 -> 323,304\n560,562 -> 560,678\n48,750 -> 48,228\n80,40 -> 80,723\n730,839 -> 191,300\n300,773 -> 977,96\n619,892 -> 827,892\n22,226 -> 656,226\n125,968 -> 125,637\n116,923 -> 512,923\n59,741 -> 59,499\n484,930 -> 487,930\n362,175 -> 362,778\n960,986 -> 53,79\n170,748 -> 576,748\n810,291 -> 743,291\n761,924 -> 339,502\n730,850 -> 920,850\n778,949 -> 778,766\n254,724 -> 254,394\n685,177 -> 685,441\n442,290 -> 833,290\n181,209 -> 72,100\n91,924 -> 953,62\n318,880 -> 318,659\n570,632 -> 570,966\n955,227 -> 667,227\n439,666 -> 439,224\n276,385 -> 276,56\n544,521 -> 544,867\n187,626 -> 187,13\n307,235 -> 859,235\n759,416 -> 668,416\n357,882 -> 981,882\n651,71 -> 651,457\n615,711 -> 615,502\n474,162 -> 305,162\n320,33 -> 320,48\n799,420 -> 799,389\n448,46 -> 313,46\n925,141 -> 925,928\n332,101 -> 332,373\n41,948 -> 749,948\n276,672 -> 207,672\n315,736 -> 86,736\n844,688 -> 466,688\n357,199 -> 107,199\n902,950 -> 14,62\n277,251 -> 923,251\n963,38 -> 34,967\n71,389 -> 577,389\n712,911 -> 712,573\n186,976 -> 148,938\n407,389 -> 637,619\n917,118 -> 917,960\n988,571 -> 362,571\n845,941 -> 189,285\n686,537 -> 306,537\n915,929 -> 946,960\n447,30 -> 447,364\n832,833 -> 832,888\n957,953 -> 203,199\n982,73 -> 400,655\n159,704 -> 159,844\n284,347 -> 159,347\n903,280 -> 93,280\n769,961 -> 140,332\n899,145 -> 293,751\n850,643 -> 148,643\n580,870 -> 739,870\n686,250 -> 686,237\n142,528 -> 142,936\n827,224 -> 827,287\n972,946 -> 155,946\n706,851 -> 862,851\n564,231 -> 564,428\n511,662 -> 511,752\n838,842 -> 585,842\n60,871 -> 870,61\n719,824 -> 719,648\n183,232 -> 936,985\n131,56 -> 953,878\n406,952 -> 80,952\n884,518 -> 945,518\n427,439 -> 662,439\n829,920 -> 829,634\n966,262 -> 966,933\n813,27 -> 813,934\n784,101 -> 784,160\n744,313 -> 744,850\n969,213 -> 206,976\n957,56 -> 28,985\n312,620 -> 312,680\n454,131 -> 454,776\n360,174 -> 175,359\n711,114 -> 692,95\n452,839 -> 938,839\n641,56 -> 641,334\n566,890 -> 51,890\n869,109 -> 869,102\n119,36 -> 119,796\n301,583 -> 301,451\n733,603 -> 733,714\n718,703 -> 581,566\n709,513 -> 915,513\n405,13 -> 572,13\n782,26 -> 391,26\n15,74 -> 858,917\n975,978 -> 38,41\n11,316 -> 982,316\n303,367 -> 303,129\n847,143 -> 847,158\n856,687 -> 856,870\n715,524 -> 715,812\n451,288 -> 272,467\n576,179 -> 119,179\n10,623 -> 10,44\n652,631 -> 796,775\n930,613 -> 913,613\n803,746 -> 803,566\n306,602 -> 306,137\n582,491 -> 582,296\n181,116 -> 231,116\n802,646 -> 802,884\n75,623 -> 75,424\n370,680 -> 370,923\n806,497 -> 939,497\n301,331 -> 818,331\n912,916 -> 27,31\n24,82 -> 683,741\n862,205 -> 316,751\n245,842 -> 383,842\n544,946 -> 518,920\n129,192 -> 18,303\n831,915 -> 31,115\n306,824 -> 454,676\n851,341 -> 125,341\n790,154 -> 790,988\n407,586 -> 477,656\n144,988 -> 925,207\n264,391 -> 264,466\n901,651 -> 646,651\n865,936 -> 390,461\n631,737 -> 631,166\n103,939 -> 937,105\n505,813 -> 505,218\n260,457 -> 141,457\n52,762 -> 54,762\n26,95 -> 889,958\n638,41 -> 330,41\n612,775 -> 191,354\n863,224 -> 863,287\n674,87 -> 674,110\n189,76 -> 954,841\n372,483 -> 503,483\n166,75 -> 619,75\n938,983 -> 18,63\n442,573 -> 858,157\n681,590 -> 878,590\n276,465 -> 500,241\n644,703 -> 651,710\n848,363 -> 254,363\n204,109 -> 216,97\n81,529 -> 81,674\n74,44 -> 978,948\n929,237 -> 598,237\n298,644 -> 298,712\n678,367 -> 360,685\n413,27 -> 413,799\n684,403 -> 684,500\n188,601 -> 972,601\n33,257 -> 33,897\n278,299 -> 278,635\n261,983 -> 804,440\n216,324 -> 216,526\n399,332 -> 399,613\n826,702 -> 826,332\n137,203 -> 624,203\n326,552 -> 36,262\n142,927 -> 343,927\n21,330 -> 410,719\n721,768 -> 289,336\n807,715 -> 807,287\n775,678 -> 62,678\n771,10 -> 491,10\n287,829 -> 287,599\n589,947 -> 767,947\n160,348 -> 798,986\n699,264 -> 108,855\n605,145 -> 568,145\n264,615 -> 545,615\n633,111 -> 11,733\n589,886 -> 589,897\n728,839 -> 78,189\n739,924 -> 948,924\n140,354 -> 830,354\n619,662 -> 332,662\n592,960 -> 592,290\n510,908 -> 510,828\n792,518 -> 792,749\n148,20 -> 832,704\n529,837 -> 863,503\n802,371 -> 301,371\n682,429 -> 682,537\n885,918 -> 38,71\n590,229 -> 795,24\n782,704 -> 244,704\n936,71 -> 981,71\n27,272 -> 27,253\n558,48 -> 558,69\n661,422 -> 661,145\n152,335 -> 152,362\n516,407 -> 26,407\n449,731 -> 592,731\n187,456 -> 594,863\n145,290 -> 15,290\n667,213 -> 214,666\n660,872 -> 660,605\n649,617 -> 986,954\n86,914 -> 959,41\n895,967 -> 24,96\n40,154 -> 762,154\n27,106 -> 855,934\n929,913 -> 319,303\n749,314 -> 387,676\n76,380 -> 824,380\n632,329 -> 632,436\n154,496 -> 154,528\n127,958 -> 127,613\n592,606 -> 363,606\n929,228 -> 929,890\n832,596 -> 801,565\n824,978 -> 134,978\n638,485 -> 638,291\n783,848 -> 783,77\n646,877 -> 646,117\n461,279 -> 850,668\n300,450 -> 115,265\n916,205 -> 145,976\n510,760 -> 124,760\n884,668 -> 884,153\n285,370 -> 705,790\n845,42 -> 17,870\n784,59 -> 71,772\n627,268 -> 333,562\n731,403 -> 22,403\n980,43 -> 43,980\n16,988 -> 973,31\n720,881 -> 300,881\n23,182 -> 723,882\n129,887 -> 51,887\n186,934 -> 186,452\n114,815 -> 39,815\n868,777 -> 868,222\n554,218 -> 911,218\n247,408 -> 777,938\n391,69 -> 285,69\n239,472 -> 614,847\n422,918 -> 422,245\n852,905 -> 852,634\n631,164 -> 17,778\n987,988 -> 11,12\n435,891 -> 435,136\n564,409 -> 767,612\n611,508 -> 611,535\n744,965 -> 631,965\n308,604 -> 509,604\n77,250 -> 589,762\n505,950 -> 685,950\n907,222 -> 850,222\n700,674 -> 754,620\n238,294 -> 53,479\n875,130 -> 875,544\n368,547 -> 368,965\n618,206 -> 311,206\n127,972 -> 852,247\n561,192 -> 982,613\n573,399 -> 573,464\n311,109 -> 764,562\n69,813 -> 809,813\n195,594 -> 317,594\n900,467 -> 638,467\n806,810 -> 806,918\n451,17 -> 128,17\n93,837 -> 878,52\n299,726 -> 531,958\n968,984 -> 18,34\n957,38 -> 14,38\n283,583 -> 32,332\n922,822 -> 953,853\n589,466 -> 753,466\n203,791 -> 933,791\n122,739 -> 778,83\n294,658 -> 289,658\n365,200 -> 365,513\n611,941 -> 701,941\n927,111 -> 107,931\n754,529 -> 181,529\n364,933 -> 567,933\n717,960 -> 717,11\n612,472 -> 612,807\n971,252 -> 531,252\n88,911 -> 387,911\n885,837 -> 75,27\n222,289 -> 714,781\n754,40 -> 293,501\n866,517 -> 949,517\n858,586 -> 331,586\n157,21 -> 731,595\n173,216 -> 822,865\n353,206 -> 353,318\n68,88 -> 957,88\n370,645 -> 200,815\n981,83 -> 89,975\n259,112 -> 259,435\n184,920 -> 825,279\n252,357 -> 252,56\n722,349 -> 368,703\n928,973 -> 597,973\n677,656 -> 788,545\n222,766 -> 527,461\n870,787 -> 972,889\n11,986 -> 986,11\n163,918 -> 748,333\n111,75 -> 823,75\n603,250 -> 375,478\n338,582 -> 338,454\n372,179 -> 452,179\n571,96 -> 571,723\n243,460 -> 267,460\n850,63 -> 43,870\n837,863 -> 113,139\n21,886 -> 709,198\n154,650 -> 181,650\n320,506 -> 320,706\n983,722 -> 983,657\n830,225 -> 190,865\n924,12 -> 11,925\n838,827 -> 258,247\n690,792 -> 690,582\n465,658 -> 146,977\n790,935 -> 39,184\n318,627 -> 318,125\n245,939 -> 291,939\n803,219 -> 254,768\n262,476 -> 441,476\n790,225 -> 790,372\n250,722 -> 613,722\n368,326 -> 368,474\n148,666 -> 394,912\n813,588 -> 238,13\n84,323 -> 84,957\n566,716 -> 822,716\n794,633 -> 459,633\n355,634 -> 237,634\n950,755 -> 950,867\n292,696 -> 340,696\n121,391 -> 361,631\n58,516 -> 624,516\n859,37 -> 184,712\n686,819 -> 428,819\n11,12 -> 988,989\n718,679 -> 280,679\n515,524 -> 515,664\n136,459 -> 136,56\n703,763 -> 703,858\n290,733 -> 290,33\n910,928 -> 910,21\n570,937 -> 570,808\n462,215 -> 462,747\n388,181 -> 712,505\n933,705 -> 933,601\n605,492 -> 188,492\n737,818 -> 564,818\n214,629 -> 735,108\n139,942 -> 598,942\n708,187 -> 541,187\n646,611 -> 325,611\n788,356 -> 718,426\n267,250 -> 267,930\n94,819 -> 94,191\n661,537 -> 661,363\n464,290 -> 471,297\n656,68 -> 337,68\n31,515 -> 797,515\n876,21 -> 81,21\n630,932 -> 21,323\n259,58 -> 542,58\n703,523 -> 703,949\n470,310 -> 470,20\n69,983 -> 977,75\n569,908 -> 569,931\n645,718 -> 645,665\n819,371 -> 819,705\n772,709 -> 772,736\n330,870 -> 382,818\n982,317 -> 982,778\n626,411 -> 626,887\n466,33 -> 466,635\n519,939 -> 519,131\n402,253 -> 402,300\n180,712 -> 826,66\n55,764 -> 941,764\n659,859 -> 659,944\n346,374 -> 346,500\n880,333 -> 880,767\n42,969 -> 983,28\n363,688 -> 363,148\n645,880 -> 265,500';
const inputArr = input.split(/\n/g).map(input => input.split(/ -> /g).map(input => input.split(/,/g).map(input => +input)));

const vectors = inputArr.map(input => {
    const vector = [input[1][0] - input[0][0], input[1][1] - input[0][1]];
    const vectorMax = Math.max(...vector.map(input => Math.abs(input)));
    return [vector.map(input => input / vectorMax), vectorMax];
});

const maxX = Math.max(...[Math.max(...inputArr.map(input => input[0][0])), Math.max(...inputArr.map(input => input[1][0]))]) + 1;
const maxY = Math.max(...[Math.max(...inputArr.map(input => input[0][1])), Math.max(...inputArr.map(input => input[1][1]))]) + 1;
const map = Array(maxY).fill(Array(maxX).fill(0, 0, maxX), 0, maxY);

const result = taskNumber => {
    let mapCopy = map;
    inputArr.forEach((input, index) => {
        const vectorArr = vectors[index];
        if (taskNumber === 2 || vectorArr[0].includes(0)) {
            for (let j = 0; j <= vectorArr[1]; j++) {
                const x = input[0][0] + j * vectorArr[0][0];
                const y = input[0][1] + j * vectorArr[0][1];
                mapCopy = mapCopy.map((input, index) => index === y ? input.map((input, index) => index === x ? input + 1 : input) : input);
            }
        }
    });
    return mapCopy.flat().filter(input => input > 1).length;
}

const result1 = result(1);
const result2 = result(2);
